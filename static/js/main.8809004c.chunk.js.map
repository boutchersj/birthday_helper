{"version":3,"sources":["SendCard.js","App.js","index.js"],"names":["SendCard","props","form","useRef","ref","onSubmit","e","preventDefault","teamName","alert","occasion","window","confirm","emailjs","sendForm","current","then","result","console","log","text","error","id","className","type","name","onChange","updateTeamName","value","firstName","required","readOnly","lastName","updateOccasionDate","occasionDate","mailingList","App","useState","testData","birthdayPeople","setBirthdayPeople","recipients","setRecipients","birthdayPerson","setBirthdayPerson","birthdayPersonFirstName","setBirthdayPersonFirstName","birthdayPersonLastName","setBirthdayPersonLastName","birthdayPersonEmail","setBirthdayPersonEmail","birthdayPersonBirthday","setBirthdayPersonBirthday","birthdayPersonFetchiversary","setBirthdayPersonFetchiversary","setOccasionDate","setOccasion","setMailingList","setTeamName","mapDataToComponents","results","file","birthdayPeopleArr","data","map","person","email","birthday","fetchiversary","useCallback","document","getElementById","updateBirthdayPersonData","split","updateRecipients","newRecipients","trim","key","updateMailingList","mailingListArr","filter","val","join","allNames","birthdaysInOrder","sort","a","b","Date","bithday","style","fetchiversariesInOrder","recipientsContent","length","useEffect","role","aria-label","rel","target","href","htmlFor","onClick","accept","multiple","event","files","Papa","parse","header","complete","undefined","find","copyText","innerHTML","navigator","clipboard","writeText","icon","faCopy","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8809004c.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport emailjs from 'emailjs-com';\n\nconst SendCard = (props) => {\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n    if (props.teamName === 'Select your team') {\n      alert('Please choose your team\\'s name from the list.\\n\\nIf your team is not on the list, contact Steven in QA about getting your team set up to use this tool. Thank you!')\n    } else if (props.occasion === 'Select one') {\n      alert('Please select either Birthday or Fetchiversary for the Occasion field.')\n      } else {\n          if (window.confirm('Are you sure you want to send this eCard to your team for signing?')) {\n            if (props.teamName === 'QA') {\n              emailjs.sendForm('service_m8joa5x', 'qa_bday_fetchiversary', form.current, 'user_xVl1ngq3WZGS7s1PEVLcD')\n              .then((result) => {\n                  console.log(result.text);\n                  alert('Yay! Your eCard has been sent out to the QA team for signing.')\n              }, (error) => {\n                  console.log(error.text);\n                  alert(`Oh no! We were not able to successfuly send your eCard. Please reach out to Steven in QA for troubleshooting.\\nBe sure to bring a copy of this error message: ${error.text}`)\n              });\n            } else if (props.teamName === 'Fraud') {\n                emailjs.sendForm('service_nwdrjd8', 'template_fpj7t9h', form.current, 'user_MprloyfAX6KHYk5heeHq8')\n                .then((result) => {\n                    console.log(result.text);\n                    alert('Yay! Your eCard has been sent out to the Fraud team for signing.')\n                }, (error) => {\n                    console.log(error.text);\n                    alert(`Oh no! We were not able to successfuly send your eCard. Please reach out to Steven in QA for troubleshooting.\\nBe sure to bring a copy of this error message: ${error.text}`)\n                });\n              } else if (props.teamName === 'Data Integrity') {\n                  emailjs.sendForm('service_nsizf8t', 'template_iepf23n', form.current, 'user_sS2mN5EUqz6iKBjdnGSBi')\n                  .then((result) => {\n                      console.log(result.text);\n                      alert('Yay! Your eCard has been sent out to the Data Integrity team for signing.')\n                  }, (error) => {\n                      console.log(error.text);\n                      alert(`Oh no! We were not able to successfuly send your eCard. Please reach out to Steven in QA for troubleshooting.\\nBe sure to bring a copy of this error message: ${error.text}`)\n                  });\n                } else if (props.teamName === 'Support') {\n                    emailjs.sendForm('service_mda3oke', 'template_hlckzb8', form.current, 'user_oqkBjOxwvA4tNkKYqrvia')\n                    .then((result) => {\n                        console.log(result.text);\n                        alert('Yay! Your eCard has been sent out to the Support team for signing.')\n                    }, (error) => {\n                        console.log(error.text);\n                        alert(`Oh no! We were not able to successfuly send your eCard. Please reach out to Steven in QA for troubleshooting.\\nBe sure to bring a copy of this error message: ${error.text}`)\n                    });\n                  }\n          } else {\n              alert('Your eCard has not been sent. Please ensure you have filled out the form completely with valid data.')\n            }\n        }\n  };\n\n  return (\n    <form ref={form} onSubmit={sendEmail} id='email-form'>\n      <div className='inputContainer'>\n        <label>Team</label>\n        <select type=\"text\" name=\"teamName\" id='teamName' onChange={props.updateTeamName} className='input-text editableFields'>\n          <option>Select your team</option>\n          <option>QA</option>\n          <option>Fraud</option>\n          <option>Data Integrity</option>\n          <option>Support</option>\n        </select>\n      </div>\n      <div className='inputContainer'>\n        <label>First Name</label>\n        <input type=\"text\" name=\"first_name\" value={props.firstName} className='input-text' required readOnly />\n      </div>\n      <div className='inputContainer'>\n        <label>Last Name</label>\n        <input type=\"text\" name=\"last_name\" value={props.lastName} className='input-text' required readOnly />\n      </div>\n      <div className='inputContainer'>\n        <label>Occasion</label>\n        <select type=\"text\" name=\"occasion\" id='occasion' onChange={props.updateOccasionDate} className='input-text editableFields'>\n          <option>Select one</option>\n          <option>Birthday</option>\n          <option>Fetchiversary</option>\n        </select>\n      </div>\n      <div className=\"inputContainer\">\n        <label>Occasion Date</label>\n        <input type=\"text\" name=\"occasion_date\" value={props.occasionDate} className='input-text' required readOnly />\n      </div>\n      <div className=\"inputContainer\">\n        <label>List of Recipients</label>\n        <input type=\"text\" name=\"mailing_list\" value={props.mailingList} className='input-text' required readOnly />\n      </div>\n      <div className=\"inputContainer\">\n        <label>eCard URL</label>\n        <input type=\"text\" name=\"ecard_url\" id='ecardUrl' className='input-text editableFields' required />\n      </div>\n      <input type=\"submit\" value=\"Send\" id=\"submit-btn\" />\n    </form>\n  );\n};\n\nexport default SendCard","import React, { useState, useEffect, useCallback } from 'react'\nimport './App.css';\nimport testData from './birthday_people.json'\nimport SendCard from './SendCard'\nimport Papa from 'papaparse'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCopy } from '@fortawesome/free-solid-svg-icons'\n\nfunction App() {\n  const [birthdayPeople, setBirthdayPeople] = useState(testData)\n  const [recipients, setRecipients] = useState([])\n  const [birthdayPerson, setBirthdayPerson] = useState('')\n  const [birthdayPersonFirstName, setBirthdayPersonFirstName] = useState('')\n  const [birthdayPersonLastName, setBirthdayPersonLastName] = useState('')\n  const [birthdayPersonEmail, setBirthdayPersonEmail] = useState('')\n  const [birthdayPersonBirthday, setBirthdayPersonBirthday] = useState('')\n  const [birthdayPersonFetchiversary, setBirthdayPersonFetchiversary] = useState('')\n  const [occasionDate, setOccasionDate] = useState('')\n  const [occasion, setOccasion] = useState('Select one')\n  const [mailingList, setMailingList] = useState('')\n  const [teamName, setTeamName] = useState('Select your team')\n\n  // CSV Parsing\n\n  const notifyUserOfFormat = () => {\n    alert(`\n      Your CSV should have this format:\\n\\n\n      Row 1 -> name, email, birthday, fetchiversary\\n\n      Row 2 -> Test User1, test1@user.com, January 1, January 10\\n\n      Row 3 -> Test User2, test2@user.com, February 2, February 20\\n\n      Row 4 -> Test User3, test3@user.com, March 3, March 30\\n\n      etc.`\n    )\n  }\n\n  const handleCSV = (event) => {\n    if (event.target.files && event.target.files.length > 0) {\n        Papa.parse(event.target.files[0], {\n          header: true,\n          complete: (results, file) => mapDataToComponents(results, file),\n          error: function(error) {\n            console.log(\"Parsing has failed unexpectedly:\", error)\n          }\n        })\n    }\n    else {\n      alert(`File selection was not successful. Please reload the page and try again.`)\n    }\n  }\n\n  const mapDataToComponents = (results, file) => {\n    const csvData = results.data\n\n    let birthdayPeopleArr = csvData.map(person => {\n      return {\n        name: person.name,\n        email: person.email,\n        birthday: person.birthday,\n        fetchiversary: person.fetchiversary\n      }\n    })\n\n    setBirthdayPeople(birthdayPeopleArr)\n  }\n\n  // Data updates and organization\n\n  const updateOccasionDate = useCallback(() => {\n    if (document.getElementById('occasion').value === 'Birthday') {\n      setOccasion('Birthday')\n      setOccasionDate(birthdayPersonBirthday)\n    } else if (document.getElementById('occasion').value === 'Fetchiversary') {\n      setOccasion('Fetchiversary')\n      setOccasionDate(birthdayPersonFetchiversary)\n    } else {\n      setOccasion('Select one')\n      setOccasionDate('Select an occasion')\n    }\n  }, [birthdayPersonBirthday, birthdayPersonFetchiversary])\n\n  const updateTeamName = () => {\n    if (document.getElementById('teamName').value === 'QA') {\n      setTeamName('QA')\n    } else if (document.getElementById('teamName').value === 'Fraud') {\n      setTeamName('Fraud')\n      } else if (document.getElementById('teamName').value === 'Data Integrity') {\n          setTeamName('Data Integrity')\n        } else {\n            setTeamName('Select your team')\n          }\n  }\n\n  const updateBirthdayPerson = () => {\n    // Update birthday person object\n    if (birthdayPeople.find(person => person.name === document.getElementById('nameInput').value) !== undefined) {\n      setBirthdayPerson(birthdayPeople.find(person => person.name === document.getElementById('nameInput').value))\n    } else {\n      setBirthdayPerson('')\n      console.log('Birthday person could not be found')\n    }\n  }\n  const updateBirthdayPersonData = useCallback(() => {\n    if (birthdayPerson.name) {\n      // Update birthday person data variables\n      setBirthdayPersonFirstName(birthdayPerson ? birthdayPerson.name.split(' ')[0] : 'First name not found')\n      setBirthdayPersonLastName(birthdayPerson ? birthdayPerson.name.split(' ')[1] : 'Last name not found')\n      setBirthdayPersonEmail(birthdayPerson ? birthdayPerson.email : 'Email not found')\n      setBirthdayPersonBirthday(birthdayPerson ? birthdayPerson.birthday : 'Birthday not found')\n      setBirthdayPersonFetchiversary(birthdayPerson ? birthdayPerson.fetchiversary : 'Fetchiversary not found')\n    } else {\n      console.log('Birthday person data cannot be updated')\n    }\n  }, [birthdayPerson])\n\n  const updateRecipients = useCallback(() => {\n    if (birthdayPerson.name) {\n      // Update recipients array\n      const newRecipients = birthdayPeople.map(person => {\n        return person.name !== birthdayPerson.name.trim() && <li key={`${person.email}`}>{person.email}</li>\n      });\n      setRecipients(newRecipients)\n    } else {\n      console.log('Recipients cannot be updated')\n    }\n  }, [birthdayPerson, birthdayPeople])\n\n  const updateMailingList = useCallback(() => {\n    if (birthdayPerson.name) {\n      // Update mailing list\n      const mailingListArr = birthdayPeople\n        .map(person => { return person.name !== birthdayPerson.name.trim() && person.email })\n        .filter(val => val !== false)\n      setMailingList(mailingListArr.join(','))\n    } else {\n      console.log('Mailing list cannot be updated')\n    }\n  }, [birthdayPerson, birthdayPeople])\n\n  const allNames = birthdayPeople.map(person => {\n    return <li key={`${person.name}`}><strong>{person.name}</strong> ({person.email})</li>\n  })\n\n  let birthdays = birthdayPeople.map(person => {\n    return { \"name\": person.name, \"birthday\": person.birthday }\n  }).sort((a,b) => { return new Date(a.birthday) - new Date(b.birthday) })\n\n  const birthdaysInOrder = birthdays.map(person => {\n    if (person.birthday === '') {\n      return <li key={`${person.bithday}`} style={{'color': 'red'}}><strong>{person.name}</strong></li>\n    }\n    else {\n      return <li key={`${person.birthday}`}>{person.birthday} ({person.name})</li>\n    }\n  })\n\n  let fetchiversaries = birthdayPeople.map(person => {\n    return { \"name\": person.name, \"fetchiversary\": person.fetchiversary }\n  }).sort((a,b) => { return new Date(a.fetchiversary) - new Date(b.fetchiversary) })\n\n  const fetchiversariesInOrder = fetchiversaries.map(person => {\n    if (person.fetchiversary === '') {\n      return <li key={`${person.fetchiversary}`}style={{'color': 'red'}}><strong>{person.name}</strong></li>\n    }\n    else {\n      return <li key={`${person.fetchiversary}`}>{person.fetchiversary} ({person.name})</li>\n    }\n  })\n\n  const recipientsContent = recipients.length === 0 \n    ? \n      <ol>\n        <li key='manual-step1'>Enter the first and last name of the Birthday/Fetchiversary Person in the field above</li>\n        <li key='manual-step2'>Click Update, and you should see the mailing list appear in this container (excluding the Birthday/Fetchiversary Person)</li>\n      </ol>\n    : <ul className='ul-data'>{recipients}</ul>\n\n  const copyToClipboard = () => {\n    let copyText = document.getElementById('emailText').innerHTML\n    navigator.clipboard.writeText(copyText)\n      .then(() => alert(`✅ Email copied\\n${copyText}` ))\n  }\n\n  useEffect(() => {\n    updateBirthdayPersonData();\n    updateRecipients();\n    updateOccasionDate();\n    updateMailingList();\n  }, [updateBirthdayPersonData, updateRecipients, updateOccasionDate, updateMailingList])\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1><span role='img' aria-label='birthday cake emoji'>🎂</span> Birthday Helper <span role='img' aria-label='envelope emoji'>✉️</span></h1>\n        <p>Automating the mental overhead of doing birthday e-cards for your team <span role='img' aria-label='party popper emoji'>🎉</span></p>\n      </header>\n\n      <section className='container-getting-started'>\n        <h2>How to Use this Tool</h2>\n        <p>Make a copy of this spreadsheet and fill in your team's data: <a rel='noopener noreferrer' target='_blank' href='https://docs.google.com/spreadsheets/d/1yZ-axvE-6IDCDqpLvmusmzHKMbFHzRTKi_DXhtjjkOc/edit#gid=0'>Team Data Template</a></p>\n        <p>Please stick to the formatting choices on the spreadsheet to ensure your data is uploaded properly to the tool later on (date, capitalization, etc.)</p>\n        <ol>\n          <li key='step1'>Download your spreadsheet from Google Sheets as a CSV file</li>\n          <li key='step2'>Upload the CSV file using the <strong>Choose File</strong> button</li>\n          <li key='step3'>Enter the name of the team member (first and last) to whom you're sending the eCard</li>\n          <li key='step4'>Click the <strong>Update</strong> button</li>\n          <li key='step5'>Create the eCard on a platform of your choosing. We recommend <a rel='noopener noreferrer' target='_blank' href='https://sendwishonline.com/en/group-cards/category'>SendWishOnline</a></li>\n          <li key='step6'>Copy the shareable link for the eCard you created, so you can distribute it to other team members for signing</li>\n          <li key='step7'>Fill out the rest of the form, ensuring you choose the correct <strong>Team</strong> and <strong>Occasion</strong></li>\n          <ul>\n            <li key='step7a'>If you don't see your team name, ask Steven in QA to get you set up with a free account for sending templated emails</li>\n          </ul>\n          <li key='step8'>Click <strong>Send</strong> to distribute your eCard to the team for signing. Give the team enough time to sign it before it arrives in your team member's inbox!</li>\n        </ol>\n      </section>\n\n      <section className='birthdayPersonInput'>\n        <div className='container-file'>\n          <label className='label-file' htmlFor=\"file\" onClick={notifyUserOfFormat}>Upload your CSV of names, emails, and birthdays:</label>\n          <input type=\"file\" accept=\".csv\" multiple={false} onChange={handleCSV} name=\"file\" id=\"file\" className=\"input-file\" />\n        </div>\n        <br></br>\n        <label htmlFor='birthdayPerson'>Birthday/Fetchiversary Person</label>\n        <input type='text' name='birthdayPerson' className='input-text editableFields' id=\"nameInput\" />\n        <button onClick={updateBirthdayPerson}>Update</button>\n      </section>\n\n      <p id=\"advisory\">\n        Schedule the eCard to be sent to \n          <strong className='recipientEmail' onClick={copyToClipboard}>\n            <span id='emailText'>{birthdayPersonEmail ? birthdayPersonEmail : 'Birthday/Fetchiversary Person\\'s Email'}</span>\n            <span>{' '}</span>\n            <FontAwesomeIcon icon={faCopy} />\n          </strong> \n        on their birthday/Fetchiversary.<br /><br />Do <strong>not</strong> include their email in the <strong>List of Recipients</strong> below.\n      </p>\n\n      <SendCard\n        teamName={teamName}\n        updateTeamName={updateTeamName}\n        firstName={birthdayPersonFirstName} \n        lastName={birthdayPersonLastName}\n        occasion={occasion}\n        occasionDate = {occasionDate}\n        updateOccasionDate= {updateOccasionDate}\n        mailingList={mailingList}\n      />\n\n      <div className='container-data'>\n        <section className='column'>\n          <h3>Birthdays</h3>\n          <ul className='ul-data'>{birthdaysInOrder}</ul>\n        </section>\n\n        <section className='column'>\n          <h3>Fetchiversaries</h3>\n          <ul className='ul-data'>{fetchiversariesInOrder}</ul>\n        </section>\n\n        <section className='column'>\n          <h3>Names</h3>\n          <ul className='ul-data'>{allNames}</ul>\n        </section>\n\n        <section className='column'>\n          <h3>Recipients</h3>\n          {recipientsContent}\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}